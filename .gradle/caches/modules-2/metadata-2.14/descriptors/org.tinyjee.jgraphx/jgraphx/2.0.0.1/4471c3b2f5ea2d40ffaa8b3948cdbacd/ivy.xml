<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
  <info organisation="org.tinyjee.jgraphx" module="jgraphx" revision="2.0.0.1" status="release" publication="20201006113042">
    <license name="JGraph Ltd - 3 clause BSD license" url="https://raw.github.com/jgraph/jgraphx/v${project.version}/license.txt"/>
    <description homepage="http://www.jgraph.com/jgraph.html">JGraphX Swing Component - Java Graph Visualization Library

		This is a binary &amp; source redistribution of the original, unmodified JGraphX library originating from:
		&quot;http://downloads.jgraph.com/downloads/jgraphx/archive/jgraphx-2_0_0_1.zip&quot;.

		The purpose of this redistribution is to make the library available to other Maven projects.</description>
  </info>
  <configurations>
    <conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
    <conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
    <conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
    <conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
    <conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
    <conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
    <conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
    <conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
    <conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
    <conf name="optional" visibility="public" description="contains all optional dependencies"/>
  </configurations>
  <publications/>
</ivy-module>
