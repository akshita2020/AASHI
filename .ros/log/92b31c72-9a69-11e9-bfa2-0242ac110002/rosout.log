

0.000000000  Node Startup
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 FATAL [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:216(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Failed to create robot simulation interface loader: According to the loaded plugin descriptions the class gazebo_ros_control/DefaultRobotHwSim with base class type gazebo_ros_control::RobotHWSim does not exist. Declared types are  gazebo_ros_control/DefaultRobotHWSim
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:27(spawn_urdf_model_client) [topics: /clock, /rosout] Waiting for service /gazebo/spawn_urdf_model
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 FATAL [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:216(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Failed to create robot simulation interface loader: According to the loaded plugin descriptions the class gazebo_ros_control/DefaultRobotHwSim with base class type gazebo_ros_control::RobotHWSim does not exist. Declared types are  gazebo_ros_control/DefaultRobotHWSim
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 FATAL [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:216(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Failed to create robot simulation interface loader: According to the loaded plugin descriptions the class DefaultRobotHwSim with base class type gazebo_ros_control::RobotHWSim does not exist. Declared types are  gazebo_ros_control/DefaultRobotHWSim
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:27(spawn_urdf_model_client) [topics: /clock, /rosout] Waiting for service /gazebo/spawn_urdf_model
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 ERROR [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:126(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] GazeboRosControlPlugin missing <legacyModeNS> while using DefaultRobotHWSim, defaults to true.
This setting assumes you have an old package with an old implementation of DefaultRobotHWSim, where the robotNamespace is disregarded and absolute paths are used instead.
If you do not want to fix this issue in an old package just set <legacyModeNS> to true.

0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:27(spawn_urdf_model_client) [topics: /clock, /rosout] Waiting for service /gazebo/spawn_urdf_model
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.13/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.10/src/kdl_parser.cpp:200(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:152(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:158(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:166(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.14/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:27(spawn_urdf_model_client) [topics: /clock, /rosout] Waiting for service /gazebo/spawn_urdf_model
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-2.5.19/src/gazebo_ros_api_plugin.cpp:156(GazeboRosApiPlugin::Load) [topics: /rosout] Finished loading Gazebo ROS API Plugin.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/init.cpp:164(shutdownCallback) [topics: /rosout] Shutdown request received.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/init.cpp:164(shutdownCallback) [topics: /rosout] Shutdown request received.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/init.cpp:164(shutdownCallback) [topics: /rosout] Shutdown request received.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: m2wr
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:292(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [/robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 INFO [spawner:121(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/switch_controller
0.000000000 INFO [spawner:129(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/unload_controller
0.000000000 INFO [spawner:184(main) [topics: /clock, /rosout] Loading controller: joint_state_controller
0.000000000 INFO [spawner:192(main) [topics: /clock, /rosout] Controller Spawner: Loaded controllers: joint_state_controller
0.001000000 INFO [spawner:201(main) [topics: /clock, /rosout] Started controllers: joint_state_controller
0.023000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:122(service::waitForService) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] waitForService: Service [/gazebo/set_physics_properties] is now available.
0.025000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:122(service::waitForService) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] is now available.
0.126000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-2.5.19/src/gazebo_ros_api_plugin.cpp:2301(GazeboRosApiPlugin::physicsReconfigureThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom, /gazebo/parameter_descriptions, /gazebo/parameter_updates] Physics dynamic reconfigure ready.
0.140000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-2.5.19/src/gazebo_ros_api_plugin.cpp:2301(GazeboRosApiPlugin::physicsReconfigureThread) [topics: /rosout, /gazebo_gui/parameter_descriptions, /gazebo_gui/parameter_updates] Physics dynamic reconfigure ready.
9.543000000 INFO [spawner:55(shutdown) [topics: /clock, /rosout] Shutting down spawner. Stopping and unloading controllers...
9.543000000 INFO [spawner:64(shutdown) [topics: /clock, /rosout] Stopping all controllers...
9.543000000 WARN [spawner:72(shutdown) [topics: /clock, /rosout] Controller Spawner error while taking down controllers: transport error completing service call: unable to receive data from sender, check sender's logs for details
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: /
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:299(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 INFO [spawner:121(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/switch_controller
0.000000000 INFO [spawner:129(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/unload_controller
0.000000000 INFO [spawner:184(main) [topics: /clock, /rosout] Loading controller: joint_state_controller
0.000000000 INFO [spawner:192(main) [topics: /clock, /rosout] Controller Spawner: Loaded controllers: joint_state_controller
0.001000000 INFO [spawner:201(main) [topics: /clock, /rosout] Started controllers: joint_state_controller
0.023000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:122(service::waitForService) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] is now available.
0.023000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:122(service::waitForService) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] waitForService: Service [/gazebo/set_physics_properties] is now available.
0.176000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-2.5.19/src/gazebo_ros_api_plugin.cpp:2301(GazeboRosApiPlugin::physicsReconfigureThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom, /gazebo/parameter_descriptions, /gazebo/parameter_updates] Physics dynamic reconfigure ready.
0.179000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-2.5.19/src/gazebo_ros_api_plugin.cpp:2301(GazeboRosApiPlugin::physicsReconfigureThread) [topics: /rosout, /gazebo_gui/parameter_descriptions, /gazebo_gui/parameter_updates] Physics dynamic reconfigure ready.
11.312000000 INFO [spawner:55(shutdown) [topics: /clock, /rosout] Shutting down spawner. Stopping and unloading controllers...
11.312000000 INFO [spawner:64(shutdown) [topics: /clock, /rosout] Stopping all controllers...
11.315000000 WARN [spawner:72(shutdown) [topics: /clock, /rosout] Controller Spawner error while taking down controllers: transport error completing service call: unable to receive data from sender, check sender's logs for details
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-roscpp-1.12.14/src/libros/service.cpp:80(service::exists) [topics: /rosout] waitForService: Service [/gazebo/set_physics_properties] has not been advertised, waiting...
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-kdl-parser-1.12.11/src/kdl_parser.cpp:208(treeFromUrdfModel) [topics: /rosout] The root link base_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
0.000000000 INFO [spawner:116(main) [topics: /clock, /rosout] Controller Spawner: Waiting for service controller_manager/load_controller
0.000000000 INFO [gazebo_interface.py:31(spawn_urdf_model_client) [topics: /clock, /rosout] Calling service /gazebo/spawn_urdf_model
0.000000000 INFO [gazebo_interface.py:33(spawn_urdf_model_client) [topics: /clock, /rosout] Spawn status: SpawnModel: Successfully spawned entity
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/include/gazebo_plugins/gazebo_ros_utils.h:95(__cxx11::string gazebo::GetRobotNamespace) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin: Using the 'robotNamespace' param: '/'
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:111(GazeboRosLaser::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Starting Laser Plugin (ns = /)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_laser.cpp:135(GazeboRosLaser::LoadThread) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states] Laser Plugin (ns = /)  <tf_prefix_>, set to ""
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:57(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] Starting plugin DiffDrive(ns = //)
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:83(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <rosDebugLevel> = na
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:93(GazeboRos::readCommonParameter) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): <tf_prefix> = 
0.000000000 WARN [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_utils.cpp:101(GazeboRos::getParameterBoolean) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan] DiffDrive(ns = //): missing <publishOdomTF> default is true
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:157(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states] DiffDrive(ns = //): Advertise joint_states
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:163(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Try to subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:171(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf] DiffDrive(ns = //): Subscribe to cmd_vel
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-plugins-2.5.19/src/gazebo_ros_diff_drive.cpp:176(GazeboRosDiffDrive::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] DiffDrive(ns = //): Advertise odom on odom 
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:60(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loading gazebo_ros_control plugin
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:173(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Starting gazebo_ros_control plugin in namespace: /
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:299(__cxx11::string gazebo_ros_control::GazeboRosControlPlugin::getURDF) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] gazebo_ros_control plugin is waiting for model URDF in parameter [robot_description] on the ROS param server.
0.000000000 INFO [/tmp/binarydeb/ros-kinetic-gazebo-ros-control-2.5.19/src/gazebo_ros_control_plugin.cpp:219(GazeboRosControlPlugin::Load) [topics: /rosout, /clock, /gazebo/link_states, /gazebo/model_states, /m2wr/laser/scan, /joint_states, /tf, /odom] Loaded gazebo_ros_control.
0.000000000 WARN [spawner:133(main) [topics: /clock, /rosout] Controller Spawner couldn't find the expected controller_manager ROS interface.
